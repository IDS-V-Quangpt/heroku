package jp.co.hyas.hpf.core;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.Date;
import java.util.TimeZone;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.time.*;
import java.sql.Timestamp;
import java.time.format.DateTimeFormatter;

public class HpfConvert {

	// 加盟店名変換テーブル
	private static final String CorporationNameTbl[][] = {
		// 全角空白→半角空白
		{ "　", " " },
		// 半角カタカナ（２文字）→全角カタカナ
		{ "ｶﾞ", "ガ" }, { "ｷﾞ", "ギ" }, { "ｸﾞ", "グ" }, { "ｹﾞ", "ゲ" }, { "ｺﾞ", "ゴ" },
		{ "ｻﾞ", "ザ" }, { "ｼﾞ", "ジ" }, { "ｽﾞ", "ズ" }, { "ｾﾞ", "ゼ" }, { "ｿﾞ", "ゾ" },
		{ "ﾀﾞ", "ダ" }, { "ﾁﾞ", "ヂ" }, { "ﾂﾞ", "ヅ" }, { "ﾃﾞ", "デ" }, { "ﾄﾞ", "ド" },
		{ "ﾊﾞ", "バ" }, { "ﾋﾞ", "ビ" }, { "ﾌﾞ", "ブ" }, { "ﾍﾞ", "ベ" }, { "ﾎﾞ", "ボ" },
		{ "ﾊﾟ", "パ" }, { "ﾋﾟ", "ピ" }, { "ﾌﾟ", "プ" }, { "ﾍﾟ", "ペ" }, { "ﾎﾟ", "ポ" },
		{ "ｳﾞ", "ヴ" }, { "ﾜﾞ", "ヷ" }, { "ｦﾞ", "ヺ" },
		// 半角カタカナ（１文字）→全角カタカナ
		{ "ｱ", "ア" }, { "ｲ", "イ" }, { "ｳ", "ウ" }, { "ｴ", "エ" }, { "ｵ", "オ" },
		{ "ｶ", "カ" }, { "ｷ", "キ" }, { "ｸ", "ク" }, { "ｹ", "ケ" }, { "ｺ", "コ" },
		{ "ｻ", "サ" }, { "ｼ", "シ" }, { "ｽ", "ス" }, { "ｾ", "セ" }, { "ｿ", "ソ" },
		{ "ﾀ", "タ" }, { "ﾁ", "チ" }, { "ﾂ", "ツ" }, { "ﾃ", "テ" }, { "ﾄ", "ト" },
		{ "ﾅ", "ナ" }, { "ﾆ", "ニ" }, { "ﾇ", "ヌ" }, { "ﾈ", "ネ" }, { "ﾉ", "ノ" },
		{ "ﾊ", "ハ" }, { "ﾋ", "ヒ" }, { "ﾌ", "フ" }, { "ﾍ", "ヘ" }, { "ﾎ", "ホ" },
		{ "ﾏ", "マ" }, { "ﾐ", "ミ" }, { "ﾑ", "ム" }, { "ﾒ", "メ" }, { "ﾓ", "モ" },
		{ "ﾔ", "ヤ" }, { "ﾕ", "ユ" }, { "ﾖ", "ヨ" },
		{ "ﾗ", "ラ" }, { "ﾘ", "リ" }, { "ﾙ", "ル" }, { "ﾚ", "レ" }, { "ﾛ", "ロ" },
		{ "ﾜ", "ワ" }, { "ｦ", "ヲ" }, { "ﾝ", "ン" },
		{ "ｧ", "ァ" }, { "ｨ", "ィ" }, { "ｩ", "ゥ" }, { "ｪ", "ェ" }, { "ｫ", "ォ" },
		{ "ｬ", "ャ" }, { "ｭ", "ュ" }, { "ｮ", "ョ" }, { "ｯ", "ッ" }, { "ｰ", "ー" }//,
		// 半角記号→全角記号
		//{ "&", "＆" }, { "'", "’" }, { ",", "，" }, { "-", "－" }, { ".", "．" }, { "･", "・" }
	};

	// 加盟店名カナ変換テーブル
	private static final String CorporationKanaTbl[][] = {
		// 全角空白→半角空白
		{ "　", " " },
		// 半角数字→全角数字
		//{ "0", "０" }, { "1", "１" }, { "2", "２" }, { "3", "３" }, { "4", "４" },
		//{ "5", "５" }, { "6", "６" }, { "7", "７" }, { "8", "８" }, { "9", "９" },
		// ひらがな→全角カタカナ
		{ "あ", "ア" }, { "い", "イ" }, { "う", "ウ" }, { "え", "エ" }, { "お", "オ" },
		{ "ぁ", "ァ" }, { "ぃ", "ィ" }, { "ぅ", "ゥ" }, { "ぇ", "ェ" }, { "ぉ", "ォ" },
		{ "か", "カ" }, { "き", "キ" }, { "く", "ク" }, { "け", "ケ" }, { "こ", "コ" },
		{ "が", "ガ" }, { "ぎ", "ギ" }, { "ぐ", "グ" }, { "げ", "ゲ" }, { "ご", "ゴ" },
		{ "さ", "サ" }, { "し", "シ" }, { "す", "ス" }, { "せ", "セ" }, { "そ", "ソ" },
		{ "ざ", "ザ" }, { "じ", "ジ" }, { "ず", "ズ" }, { "ぜ", "ゼ" }, { "ぞ", "ゾ" },
		{ "た", "タ" }, { "ち", "チ" }, { "つ", "ツ" }, { "て", "テ" }, { "と", "ト" },
		{ "だ", "ダ" }, { "ぢ", "ヂ" }, { "づ", "ヅ" }, { "で", "デ" }, { "ど", "ド" },
		{ "っ", "ッ" },
		{ "な", "ナ" }, { "に", "ニ" }, { "ぬ", "ヌ" }, { "ね", "ネ" }, { "の", "ノ" },
		{ "は", "ハ" }, { "ひ", "ヒ" }, { "ふ", "フ" }, { "へ", "ヘ" }, { "ほ", "ホ" },
		{ "ば", "バ" }, { "び", "ビ" }, { "ぶ", "ブ" }, { "べ", "ベ" }, { "ぼ", "ボ" },
		{ "ぱ", "パ" }, { "ぴ", "ピ" }, { "ぷ", "プ" }, { "ぺ", "ペ" }, { "ぽ", "ポ" },
		{ "ま", "マ" }, { "み", "ミ" }, { "む", "ム" }, { "め", "メ" }, { "も", "モ" },
		{ "や", "ヤ" }, { "ゆ", "ユ" }, { "よ", "ヨ" },
		{ "ゃ", "ャ" }, { "ゅ", "ュ" }, { "ょ", "ョ" },
		{ "ら", "ラ" }, { "り", "リ" }, { "る", "ル" }, { "れ", "レ" }, { "ろ", "ロ" },
		{ "わ", "ワ" }, { "ゐ", "ヰ" }, { "ゑ", "ヱ" }, { "を", "ヲ" }, { "ん", "ン" },
		{ "ゎ", "ヮ" },
		{ "ヴ", "ヴ" },
		// 半角カタカナ（２文字）→全角カタカナ
		{ "ｶﾞ", "ガ" }, { "ｷﾞ", "ギ" }, { "ｸﾞ", "グ" }, { "ｹﾞ", "ゲ" }, { "ｺﾞ", "ゴ" },
		{ "ｻﾞ", "ザ" }, { "ｼﾞ", "ジ" }, { "ｽﾞ", "ズ" }, { "ｾﾞ", "ゼ" }, { "ｿﾞ", "ゾ" },
		{ "ﾀﾞ", "ダ" }, { "ﾁﾞ", "ヂ" }, { "ﾂﾞ", "ヅ" }, { "ﾃﾞ", "デ" }, { "ﾄﾞ", "ド" },
		{ "ﾊﾞ", "バ" }, { "ﾋﾞ", "ビ" }, { "ﾌﾞ", "ブ" }, { "ﾍﾞ", "ベ" }, { "ﾎﾞ", "ボ" },
		{ "ﾊﾟ", "パ" }, { "ﾋﾟ", "ピ" }, { "ﾌﾟ", "プ" }, { "ﾍﾟ", "ペ" }, { "ﾎﾟ", "ポ" },
		{ "ｳﾞ", "ヴ" }, { "ﾜﾞ", "繝ｷ" }, { "ｦﾞ", "繝ｺ" },
		// 半角カタカナ（１文字）→全角カタカナ
		{ "ｱ", "ア" }, { "ｲ", "イ" }, { "ｳ", "ウ" }, { "ｴ", "エ" }, { "ｵ", "オ" },
		{ "ｶ", "カ" }, { "ｷ", "キ" }, { "ｸ", "ク" }, { "ｹ", "ケ" }, { "ｺ", "コ" },
		{ "ｻ", "サ" }, { "ｼ", "シ" }, { "ｽ", "ス" }, { "ｾ", "セ" }, { "ｿ", "ソ" },
		{ "ﾀ", "タ" }, { "ﾁ", "チ" }, { "ﾂ", "ツ" }, { "ﾃ", "テ" }, { "ﾄ", "ト" },
		{ "ﾅ", "ナ" }, { "ﾆ", "ニ" }, { "ﾇ", "ヌ" }, { "ﾈ", "ネ" }, { "ﾉ", "ノ" },
		{ "ﾊ", "ハ" }, { "ﾋ", "ヒ" }, { "ﾌ", "フ" }, { "ﾍ", "ヘ" }, { "ﾎ", "ホ" },
		{ "ﾏ", "マ" }, { "ﾐ", "ミ" }, { "ﾑ", "ム" }, { "ﾒ", "メ" }, { "ﾓ", "モ" },
		{ "ﾔ", "ヤ" }, { "ﾕ", "ユ" }, { "ﾖ", "ヨ" },
		{ "ﾗ", "ラ" }, { "ﾘ", "リ" }, { "ﾙ", "ル" }, { "ﾚ", "レ" }, { "ﾛ", "ロ" },
		{ "ﾜ", "ワ" }, { "ｦ", "ヲ" }, { "ﾝ", "ン" },
		{ "ｧ", "ァ" }, { "ｨ", "ィ" }, { "ｩ", "ゥ" }, { "ｪ", "ェ" }, { "ｫ", "ォ" },
		{ "ｬ", "ャ" }, { "ｭ", "ュ" }, { "ｮ", "ョ" }, { "ｯ", "ッ" }, { "ｰ", "ー" }//,
		// 半角記号→全角記号
		//{ "&", "＆" }, { "'", "’" }, { ",", "，" }, { "-", "－" }, { ".", "．" }, { "･", "・" }
	};

	// 連名カナ変換テーブル
	private static final String JointNameKanaTbl[][] = {
		// 全角空白→半角空白
		{ "　", " " },
		// ひらがな→全角カタカナ
		{ "あ", "ア" }, { "い", "イ" }, { "う", "ウ" }, { "え", "エ" }, { "お", "オ" },
		{ "ぁ", "ァ" }, { "ぃ", "ィ" }, { "ぅ", "ゥ" }, { "ぇ", "ェ" }, { "ぉ", "ォ" },
		{ "か", "カ" }, { "き", "キ" }, { "く", "ク" }, { "け", "ケ" }, { "こ", "コ" },
		{ "が", "ガ" }, { "ぎ", "ギ" }, { "ぐ", "グ" }, { "げ", "ゲ" }, { "ご", "ゴ" },
		{ "さ", "サ" }, { "し", "シ" }, { "す", "ス" }, { "せ", "セ" }, { "そ", "ソ" },
		{ "ざ", "ザ" }, { "じ", "ジ" }, { "ず", "ズ" }, { "ぜ", "ゼ" }, { "ぞ", "ゾ" },
		{ "た", "タ" }, { "ち", "チ" }, { "つ", "ツ" }, { "て", "テ" }, { "と", "ト" },
		{ "だ", "ダ" }, { "ぢ", "ヂ" }, { "づ", "ヅ" }, { "で", "デ" }, { "ど", "ド" },
		{ "っ", "ッ" },
		{ "な", "ナ" }, { "に", "ニ" }, { "ぬ", "ヌ" }, { "ね", "ネ" }, { "の", "ノ" },
		{ "は", "ハ" }, { "ひ", "ヒ" }, { "ふ", "フ" }, { "へ", "ヘ" }, { "ほ", "ホ" },
		{ "ば", "バ" }, { "び", "ビ" }, { "ぶ", "ブ" }, { "べ", "ベ" }, { "ぼ", "ボ" },
		{ "ぱ", "パ" }, { "ぴ", "ピ" }, { "ぷ", "プ" }, { "ぺ", "ペ" }, { "ぽ", "ポ" },
		{ "ま", "マ" }, { "み", "ミ" }, { "む", "ム" }, { "め", "メ" }, { "も", "モ" },
		{ "や", "ヤ" }, { "ゆ", "ユ" }, { "よ", "ヨ" },
		{ "ゃ", "ャ" }, { "ゅ", "ュ" }, { "ょ", "ョ" },
		{ "ら", "ラ" }, { "り", "リ" }, { "る", "ル" }, { "れ", "レ" }, { "ろ", "ロ" },
		{ "わ", "ワ" }, { "ゐ", "ヰ" }, { "ゑ", "ヱ" }, { "を", "ヲ" }, { "ん", "ン" },
		{ "ゎ", "ヮ" },
		{ "ヴ", "ヴ" },
		// 半角カタカナ（２文字）→全角カタカナ
		{ "ｶﾞ", "ガ" }, { "ｷﾞ", "ギ" }, { "ｸﾞ", "グ" }, { "ｹﾞ", "ゲ" }, { "ｺﾞ", "ゴ" },
		{ "ｻﾞ", "ザ" }, { "ｼﾞ", "ジ" }, { "ｽﾞ", "ズ" }, { "ｾﾞ", "ゼ" }, { "ｿﾞ", "ゾ" },
		{ "ﾀﾞ", "ダ" }, { "ﾁﾞ", "ヂ" }, { "ﾂﾞ", "ヅ" }, { "ﾃﾞ", "デ" }, { "ﾄﾞ", "ド" },
		{ "ﾊﾞ", "バ" }, { "ﾋﾞ", "ビ" }, { "ﾌﾞ", "ブ" }, { "ﾍﾞ", "ベ" }, { "ﾎﾞ", "ボ" },
		{ "ﾊﾟ", "パ" }, { "ﾋﾟ", "ピ" }, { "ﾌﾟ", "プ" }, { "ﾍﾟ", "ペ" }, { "ﾎﾟ", "ポ" },
		{ "ｳﾞ", "ヴ" }, { "ﾜﾞ", "繝ｷ" }, { "ｦﾞ", "繝ｺ" },
		// 半角カタカナ（１文字）→全角カタカナ
		{ "ｱ", "ア" }, { "ｲ", "イ" }, { "ｳ", "ウ" }, { "ｴ", "エ" }, { "ｵ", "オ" },
		{ "ｶ", "カ" }, { "ｷ", "キ" }, { "ｸ", "ク" }, { "ｹ", "ケ" }, { "ｺ", "コ" },
		{ "ｻ", "サ" }, { "ｼ", "シ" }, { "ｽ", "ス" }, { "ｾ", "セ" }, { "ｿ", "ソ" },
		{ "ﾀ", "タ" }, { "ﾁ", "チ" }, { "ﾂ", "ツ" }, { "ﾃ", "テ" }, { "ﾄ", "ト" },
		{ "ﾅ", "ナ" }, { "ﾆ", "ニ" }, { "ﾇ", "ヌ" }, { "ﾈ", "ネ" }, { "ﾉ", "ノ" },
		{ "ﾊ", "ハ" }, { "ﾋ", "ヒ" }, { "ﾌ", "フ" }, { "ﾍ", "ヘ" }, { "ﾎ", "ホ" },
		{ "ﾏ", "マ" }, { "ﾐ", "ミ" }, { "ﾑ", "ム" }, { "ﾒ", "メ" }, { "ﾓ", "モ" },
		{ "ﾔ", "ヤ" }, { "ﾕ", "ユ" }, { "ﾖ", "ヨ" },
		{ "ﾗ", "ラ" }, { "ﾘ", "リ" }, { "ﾙ", "ル" }, { "ﾚ", "レ" }, { "ﾛ", "ロ" },
		{ "ﾜ", "ワ" }, { "ｦ", "ヲ" }, { "ﾝ", "ン" },
		{ "ｧ", "ァ" }, { "ｨ", "ィ" }, { "ｩ", "ゥ" }, { "ｪ", "ェ" }, { "ｫ", "ォ" },
		{ "ｬ", "ャ" }, { "ｭ", "ュ" }, { "ｮ", "ョ" }, { "ｯ", "ッ" }, { "ｰ", "ー" }//,
		// 半角記号→全角記号
		//{ "･", "・" }
	};

	static public String CorporationName(String v) {
		return convert(v, CorporationNameTbl);
	}

	static public String CorporationKana(String v) {
		return convert(v, CorporationKanaTbl);
	}

	static public String JointNameKana(String v) {
		return convert(v, JointNameKanaTbl);
	}

	static public String PropertyNameKana(String v) {
		// 物件名カナの変換ルールは連名カナと同じ
		return convert(v, JointNameKanaTbl);
	}
	
	static public String TimeZoneJST(String v)  throws ParseException{
		return convertZoneJST(v);
	}
	
	private static final String convert(String v, String[][] tbl) {
		if (v == null || v.length() <= 0) {
			return "";
		}

		StringBuilder sb = new StringBuilder();
		for (int i = 0, j = 0; i < v.length(); i++) {
			Character c = new Character(v.charAt(i));
			for (j = 0; j < tbl.length; j++) {
				if (v.substring(i).startsWith(tbl[j][0])) {
					sb.append(tbl[j][1]);
					i += tbl[j][0].length() - 1;
					break;
				}
			}
			if (j >= tbl.length) {
				sb.append(c);
			}
		}

		Logger logger = LoggerFactory.getLogger(HpfConvert.class);
		logger.info("Before:" + v);
		logger.info("After:" + sb.toString());
		return sb.toString();
	}
	
	private static final String convertZoneJST(String v) throws ParseException{
		String timeStr = "";
		String gmtDateString = "";
		try { 
				timeStr = v;
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
				Date gmtDate = new Timestamp(sdf.parse(timeStr).getTime());            
				SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				formatter.setTimeZone(TimeZone.getTimeZone("GMT-09:00"));
				gmtDateString = formatter.format(gmtDate);
		} catch (Exception e) {

		}
		return gmtDateString;
	}
	}
